#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author : Patrick Charron
# Email : patrick.charron.pc@gmail.com
# Description : SQL process viewer
#  
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import signal
import getopt
import datetime
import argparse

from tabulate import tabulate

from sqltoplib import drivers

VERSION = "0.0.1"

def signal_handler(sig, frame):
    """
    Get signals and exit
    """
    sys.exit(1)

def show_usage():
    """
    Print a usage message
    """
    print("""Usage: myps [OPTION]... -u [USER]...""")


def show_help():
    """Print a help message"""
    print("""Database process viewer
Example: myps --driver mysql --config host:127.0.0.1,port:3306

Options:
  -d, --driver=DRIVER       select driver
  -l, --list                list all type
  -c, --config              set config keyword (host:127.0.0.1)

Miscellaneous:
  -V, --version         print version information and exit
  -h, --help                display this help and exit

Report bugs to: patrick.charron.pc@gmail.com""")

def main(driver):
    #print "%-10s %-11s %-15s %-20s %-5s %-8s %-5s" % ('ID', 'USER', 'HOST', 'DB', 'STATE', 'TIME', 'INFO')
    #for item in tops:
    #    print(item)
    fields = driver.fields()
    tops = driver.tops()
    data = []
    header = []
    for i in fields:
        header.append(i)
    for item in tops:
        line = []
        for i in item:
            line.append(item[i])
        data.append(line)
    print(tabulate(data, numalign="right", floatfmt=".0f", headers=header))



if __name__ == '__main__':
    #Initialise signal to catch SIGINT
    signal.signal(signal.SIGINT, signal_handler)
    parser = argparse.ArgumentParser(description='emailsync is an email synchronisation tool')
    parser.add_argument('--driver', "-d", metavar='DRIVER', nargs="?", help='driver name')
    parser.add_argument('--config', "-c", metavar='CONFIG', nargs="?", help='configuration')
    parser.add_argument('--list', "-l",  metavar='SEC', type=int, default=1, nargs="?", help='refresh interval in second')
    parser.add_argument('--version', action='version', version='%(prog)s 0.1')
    args = parser.parse_args()
    if args.driver == "mysql":
        driver = drivers.mysql.MySQLDriver()
    elif args.driver == "linux":
        driver = drivers.linux.LinuxDriver()
    config = {}
    for line in args.config.split(","):
        config[line.split(":")[0]] = line.split(":")[1]
    
    driver.configure(config)
    driver.initialize()
    main(driver)


